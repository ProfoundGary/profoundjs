{"version":3,"file":"drawing.xml.js","names":["$attr","generateDrawingXml","_ref","images","output","i","_loop","image","_step","value","imageId","pxToEmu","px","pxToEmu_","dpi","concat","anchor","column","offsetX","row","offsetY","width","height","title","description","_iterator","_createForOfIteratorHelperLoose","done","DEFAULT_DISPLAY_DPI","DEFAULT_IMAGE_DPI","imageDpi","displayDpi","Math","round"],"sources":["../../../source/write/files/drawing.xml.js"],"sourcesContent":["import $attr from '../../xml/sanitizeAttributeValue.js'\r\n\r\n// https://gitlab.com/catamphetamine/write-excel-file/-/blob/main/docs/IMAGES.md\r\nexport default function generateDrawingXml({ images }) {\r\n\tlet output = '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>' +\r\n\t\t'<xdr:wsDr xmlns:xdr=\"http://schemas.openxmlformats.org/drawingml/2006/spreadsheetDrawing\" xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\">'\r\n\r\n\tlet i = 0\r\n\tfor (const image of images) {\r\n\t\t// The `rId` of the image in `drawing.xml.rels` file.\r\n\t\tconst imageId = i + 1\r\n\r\n\t\tconst pxToEmu = (px) => pxToEmu_(px, image.dpi)\r\n\r\n\t\t// There're two ways an image could be \"anchored\" in a spreadsheet:\r\n\t\t// * One-cell anchor — \"anchors\" the image's top-left corner to a top-left corner of a cell.\r\n\t\t// * Two-cell anchor — \"anchors\" the image's top-left corner to a top-left corner of the first cell,\r\n\t\t//   and then the image's bottom-right corner to the bottom-right corner of the second cell.\r\n\t\t//   While doing so, it completely ignores the image's aspect ratio, so there seems to be\r\n\t\t//   no equivalent for CSS's `object-fit: contain` behavior.\r\n\t\toutput += '<xdr:oneCellAnchor>'\r\n\r\n\t\toutput += '<xdr:from>'\r\n\t\toutput += `<xdr:col>${image.anchor.column - 1}</xdr:col>`\r\n\t\toutput += `<xdr:colOff>${typeof image.offsetX === 'number' ? pxToEmu(image.offsetX) : 0}</xdr:colOff>`\r\n\t\toutput += `<xdr:row>${image.anchor.row - 1}</xdr:row>`\r\n\t\toutput += `<xdr:rowOff>${typeof image.offsetY === 'number' ? pxToEmu(image.offsetY) : 0}</xdr:rowOff>`\r\n\t\toutput += '</xdr:from>'\r\n\r\n\t\toutput += `<xdr:ext cx=\"${pxToEmu(image.width)}\" cy=\"${pxToEmu(image.height)}\"/>`\r\n\r\n\t\toutput += '<xdr:pic>'\r\n\r\n\t\toutput += '<xdr:nvPicPr>'\r\n\r\n\t\toutput += `<xdr:cNvPr id=\"${imageId}\" name=\"${image.title ? $attr(image.title) : 'Picture ' + imageId}\" descr=\"${image.description ? $attr(image.description) : ''}\"/>`\r\n\r\n\t\toutput += '<xdr:cNvPicPr>'\r\n    // Optional XML element. Locks the aspect ratio of the image. -->\r\n    output += '<a:picLocks noChangeAspect=\"1\"/>'\r\n\t\toutput += '</xdr:cNvPicPr>'\r\n\r\n\t\toutput += '</xdr:nvPicPr>'\r\n\r\n\t\toutput += '<xdr:blipFill>';\r\n\r\n\t\t// The link to the image.\r\n\t\toutput += `<a:blip xmlns:r=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\" r:embed=\"rId${imageId}\" cstate=\"print\"/>`;\r\n\r\n\t\t// Allows scaling the image.\r\n\t\toutput += '<a:stretch>'\r\n\t\toutput += '<a:fillRect/>'\r\n\t\toutput += '</a:stretch>'\r\n\r\n\t\toutput += '</xdr:blipFill>'\r\n\r\n\t\t// Dunno what this is.\r\n\t\toutput += '<xdr:spPr>'\r\n\r\n\t\toutput += '<a:prstGeom prst=\"rect\">'\r\n\t\toutput += '<a:avLst/>'\r\n\t\toutput += '</a:prstGeom>'\r\n\r\n\t\toutput += '</xdr:spPr>'\r\n\r\n\t\toutput += '</xdr:pic>'\r\n\r\n\t\toutput += '<xdr:clientData/>';\r\n\r\n\t\toutput += '</xdr:oneCellAnchor>';\r\n\r\n\t\ti++;\r\n\t}\r\n\r\n\toutput += '</xdr:wsDr>';\r\n\r\n\treturn output;\r\n}\r\n\r\n// For legacy reasons, XLSX documents measure image dimensions not in pixels\r\n// but rather in a weird measurement unit called EMU (English Metric Unit).\r\n// https://gitlab.com/catamphetamine/write-excel-file/-/blob/main/docs/IMAGES.md#image-dimensions\r\n// This function converts pixels to EMUs.\r\nconst DEFAULT_DISPLAY_DPI = 96\r\nconst DEFAULT_IMAGE_DPI = 96\r\nfunction pxToEmu_(px, imageDpi) {\r\n\tconst displayDpi = DEFAULT_DISPLAY_DPI\r\n\treturn Math.round(px * 9525 * (DEFAULT_DISPLAY_DPI / displayDpi) * (DEFAULT_IMAGE_DPI / imageDpi))\r\n}"],"mappings":"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","ignoreList":[]}