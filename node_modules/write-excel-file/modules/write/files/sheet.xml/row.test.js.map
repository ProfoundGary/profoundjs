{"version":3,"file":"row.test.js","names":["generateRow","describe","it","expect","value","type","String","Number","getSharedString","string","to","equal"],"sources":["../../../../source/write/files/sheet.xml/row.test.js"],"sourcesContent":["// Copy-pasted from:\r\n// https://github.com/davidramos-om/zipcelx-on-steroids/blob/master/__test__/formatters/rows/formatRows.spec.js\r\n\r\nimport generateRow from './row.js'\r\n\r\ndescribe('generateRow()', () => {\r\n  it('Should create one row from given data', () => {\r\n    expect(generateRow(\r\n      [\r\n        { value: 'Test', type: String },\r\n        { value: 1000, type: Number }\r\n      ],\r\n      0,\r\n      {\r\n        getSharedString(string) {\r\n          return 0\r\n        }\r\n      }\r\n    )).to.equal(\r\n      // '<row r=\"1\"><c r=\"A1\" t=\"inlineStr\"><is><t>Test</t></is></c><c r=\"B1\"><v>1000</v></c></row>'\r\n    \t'<row r=\"1\"><c r=\"A1\" t=\"s\"><v>0</v></c><c r=\"B1\"><v>1000</v></c></row>'\r\n    )\r\n  })\r\n})"],"mappings":"AAAA;AACA;;AAEA,OAAOA,WAAW,MAAM,UAAU;AAElCC,QAAQ,CAAC,eAAe,EAAE,YAAM;EAC9BC,EAAE,CAAC,uCAAuC,EAAE,YAAM;IAChDC,MAAM,CAACH,WAAW,CAChB,CACE;MAAEI,KAAK,EAAE,MAAM;MAAEC,IAAI,EAAEC;IAAO,CAAC,EAC/B;MAAEF,KAAK,EAAE,IAAI;MAAEC,IAAI,EAAEE;IAAO,CAAC,CAC9B,EACD,CAAC,EACD;MACEC,eAAe,WAAfA,eAAeA,CAACC,MAAM,EAAE;QACtB,OAAO,CAAC;MACV;IACF,CACF,CAAC,CAAC,CAACC,EAAE,CAACC,KAAK;IACT;IACD,wEACD,CAAC;EACH,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}