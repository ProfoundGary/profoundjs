{"version":3,"file":"processMergedCells.js","names":["getCellStyleProperties","processMergedCells","data","_ref","schema","mergedCells","cloneData","slice","i","length","rowIndex","row","columnIndex","cell","_cell$span","span","_cell$rowSpan","rowSpan","processSpanningCells","push","_ref2","cellStyleProperties","j","undefined","Error","concat","JSON","stringify"],"sources":["../../../../source/write/files/sheet.xml/processMergedCells.js"],"sourcesContent":["import getCellStyleProperties from './helpers/getCellStyleProperties.js'\r\n\r\n// Supports \"merging cells\" across columns and rows.\r\n// https://rdrr.io/cran/openxlsx/man/mergeCells.html\r\n//\r\n// Returned result example for merged cells range \"A2:C3\":\r\n// { mergedCells: [ [0, 1], [2, 2] ] }\r\n//\r\n// Data example:\r\n//\r\n// rows:\r\n// [\r\n//   [...],\r\n//   [\r\n//     { type: String, value: 'abc', span: 3, rowSpan: 2 },\r\n//     { ... },\r\n//     { ... }\r\n//   ],\r\n//   [...]\r\n// ]\r\n\r\nexport default function processMergedCells(data, { schema }) {\r\n\tconst mergedCells = []\r\n\r\n\tif (schema) {\r\n\t\treturn {\r\n\t\t\tdata,\r\n\t\t\tmergedCells\r\n\t\t}\r\n\t}\r\n\r\n\tlet cloneData = () => {\r\n\t\t// The code will apply the style from the originating \"merged\" cells\r\n\t\t// to their adjacent `null` cells, so clone `data` to prevent mutating it.\r\n\t\tdata = data.slice()\r\n\t\t// Also clone each row of `data`.\r\n\t\tlet i = 0\r\n\t\twhile (i < data.length) {\r\n\t\t\tdata[i] = data[i].slice()\r\n\t\t\ti++\r\n\t\t}\r\n\t\t// `data` has been cloned. No need to clone it again.\r\n\t\tcloneData = () => data\r\n\t\t// Return the cloned `data`.\r\n\t\treturn data\r\n\t}\r\n\r\n\tlet rowIndex = 0\r\n\twhile (rowIndex < data.length) {\r\n\t\tconst row = data[rowIndex]\r\n\t\tlet columnIndex = 0\r\n\t\twhile (columnIndex < row.length) {\r\n\t\t\tconst cell = row[columnIndex]\r\n\t\t\tif (cell) {\r\n\t\t\t\tconst { span = 1, rowSpan = 1 } = cell\r\n\r\n\t\t\t\tif (span > 1 || rowSpan > 1) {\r\n\t\t\t\t\t// Validate that `span`-ning or `rowSpan`-ning cells only overlap\r\n\t\t\t\t\t// `null` or `undefined` ones. Especially that `span`-ning or `rowSpan`-ning cells\r\n\t\t\t\t\t// don't overlap other `span`-ning or `rowSpan`-ning cells.\r\n\t\t\t\t\tprocessSpanningCells({ data, rowIndex, columnIndex, span, rowSpan, cloneData })\r\n\r\n\t\t\t\t\t// Add \"merged cells\" entry:\r\n\t\t\t\t\t// `[ [fromRowIndex, fromColumnIndex], [toRowIndex, toColumnIndex] ]`.\r\n\t\t\t\t\tmergedCells.push([\r\n\t\t\t\t\t\t[rowIndex, columnIndex],\r\n\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\trowIndex + (rowSpan ? rowSpan - 1 : 0),\r\n\t\t\t\t\t\t\tcolumnIndex + (span ? span - 1 : 0)\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t])\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tcolumnIndex++\r\n\t\t}\r\n\t\trowIndex++\r\n\t}\r\n\r\n\treturn {\r\n\t\tdata,\r\n\t\tmergedCells\r\n\t}\r\n}\r\n\r\n// Validate that a `span`-ning / `rowSpan`-ning cell doesn't overlap\r\n// with other cells, especially `span`-ning / `rowSpan`-ning ones,\r\n// because those ones would make MS Office 2007 Excel say:\r\n// \"Excel found unreadable content in 'file.xlsx'.\r\n//  Do you want to recover the contents of this workbook?\r\n//  If you trust the source of this workbook, click Yes\".\r\nfunction processSpanningCells({ data, rowIndex, columnIndex, span, rowSpan, cloneData }) {\r\n\tconst cellStyleProperties = getCellStyleProperties(data[rowIndex][columnIndex])\r\n\r\n\tif (cellStyleProperties) {\r\n\t\tdata = cloneData()\r\n\t}\r\n\r\n\tlet i = rowIndex\r\n\twhile (i <= rowIndex + (rowSpan - 1)) {\r\n\t\tlet j = columnIndex\r\n\t\twhile (j <= columnIndex + (span - 1)) {\r\n\t\t\tconst cell = data[i][j]\r\n\t\t\tif (i > rowIndex || j > columnIndex) {\r\n\t\t\t\t// Validate that all hidden cells are `null` or `undefined`.\r\n\t\t\t\tif (cell !== null && cell !== undefined) {\r\n\t\t\t\t\tthrow new Error(`[write-excel-file] When using \\`span\\` or \\`rowSpan\\` parameters, all hidden overlapped cells should be represented by \\`null\\`s or \\`undefined\\`s. Cell at row ${rowIndex + 1} and column ${columnIndex + 1} is configured with \\`span\\` ${span} and \\`rowSpan\\` ${rowSpan}. Cell at row ${i + 1} and column ${j + 1} is neither \\`null\\` nor \\`undefined\\`: ${JSON.stringify(cell)}`)\r\n\t\t\t\t}\r\n\t\t\t\t// Apply the style from the original cell to this `null` cell.\r\n\t\t\t\t// https://gitlab.com/catamphetamine/write-excel-file/-/issues/43\r\n\t\t\t\tif (cellStyleProperties) {\r\n\t\t\t\t\tdata[i][j] = cellStyleProperties\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tj++\r\n\t\t}\r\n\t\ti++\r\n\t}\r\n}"],"mappings":"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","ignoreList":[]}